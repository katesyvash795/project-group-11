{"mappings":"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","sources":["src/js/bookAPI.js","src/js/modal.js","src/js/renderSelectCategory.js","src/js/loader.js","src/js/bestBooks.js","src/js/book-list.js"],"sourcesContent":["\nconst BASE_URL = 'https://books-backend.p.goit.global';\nconst CATEGOTY_LIST_WAY = '/books/category-list';\nconst TOPBOOKS_WAY = '/books/top-books';\nconst CATEGORY_WAY = '/books/category';\nconst BYIDWAY = '/books/';\n\n\n\n// Функція, що повертає массив з категоріями \nexport async function getCategotyList() {\n\n    const categoryList = await fetch(`${BASE_URL}${CATEGOTY_LIST_WAY}`).then(resolve => resolve.json());\n    // console.log(categoryList);\n    return categoryList;\n\n}\n\n// Функція, що повертає, массив об'єктів, які містять в собі назву категорії та массив 5-ти кращих книг. \nexport async function getBestBooks() {\n\n    const topBooks = await fetch(`${BASE_URL}${TOPBOOKS_WAY}`).then(resolve => resolve.json());\n    // console.log(topBooks);\n    return topBooks;\n\n}\n\n// Функція, що повертає книги в зазначеній категорії. \nexport async function getCategory(categoryName) {\n    const category = await fetch(`${BASE_URL}${CATEGORY_WAY}?category=${categoryName}`).then(resolve => resolve.json());\n    // console.log(category);\n    return category;\n\n}\n\n// Функція, що повертає книгу по ID. \nexport async function getBookById(id) {\n\n    const book = await fetch(`${BASE_URL}${BYIDWAY}/${id}`).then(resolve => resolve.json());\n    // console.log(book);\n    return book;\n\n}\n\n\n\n","import {onClickCategory} from './renderSelectCategory';\nimport {getBookById} from './bookAPI';\nconst contRef = document.querySelector(`.category-list-cont`);\nconst closeBtn = document.querySelector('.modal-close');\nconst modalWindow = document.querySelector('.modal');\n\n\nconst refs = {\n        modalImage: document.querySelector('.modal-image'),\n        modalTitle: document.querySelector('.modal-title'),\n        modalAuthor: document.querySelector('.modal-author'),\n        modalDescription: document.querySelector('.modal-description'),\n        modal1: document.querySelector('.modal-amazon-link'),\n        modal2: document.querySelector('.modal-apple-link'),\n        modal3: document.querySelector('.modal-shop-link'),\n        modalButton: document.querySelector('.modal-button'),\n        afterButton: document.querySelector('.after-button')\n    }\n    \nconst storageKey = 'shoppingList';\n\nexport function modalShow() {\n  const refLi = document.querySelectorAll('.category-item, .best-book-item');\n  refLi.forEach(element => {\n    element.addEventListener('click', elem => {\n      clearModal();\n      const elId = elem.currentTarget.dataset.id;\n      getBookById(elId).then(resp => {\n        refs.modalAuthor.textContent = resp.author;\n        refs.modalTitle.textContent = resp.title;\n        refs.modalDescription.textContent = resp.description;\n        refs.modalImage.setAttribute('src', resp.book_image);\n        refs.modal1.setAttribute('href', resp.buy_links[0].url);\n        refs.modal2.setAttribute('href', resp.buy_links[1].url);\n        refs.modal3.setAttribute('href', resp.buy_links[4].url);\n\n                const shoppingList = JSON.parse(localStorage.getItem(storageKey)) || [];\n        const bookIndex = shoppingList.findIndex(item => item.title === resp.title);\n\n        if (bookIndex === -1) {\n          refs.modalButton.textContent = 'Add to shopping list';\n          refs.afterButton.textContent = '';\n        } else {\n          refs.modalButton.textContent = 'Remove from the shopping list';\n          refs.afterButton.textContent =\n            'Congratulations! You have added the book to the shopping list. To delete, press the button \"Remove from the shopping list\".';\n        }\n      });\n\n      openModal();\n      document.addEventListener('keydown', onEscape);\n    });\n  });\n}\n\nfunction closeModal() {\nmodalWindow.classList.add('visually-hidden')\ndocument.body.classList.remove('locked')\nmodalWindow.removeEventListener('click', backDropClick)\n}\n\nfunction openModal() {\n    modalWindow.classList.remove('visually-hidden')\n    document.body.classList.add('locked')\n    modalWindow.addEventListener('click', backDropClick);\n}\n\nfunction backDropClick(e) {\n    if (e.target === modalWindow) {\n      closeModal();\n    }\n    \n}\n\nfunction onEscape(event) {\n    if (event.code === 'Escape') {\n       closeModal()\n       document.removeEventListener('keydown', onEscape)\n    }}\n\nfunction clearModal() {\n    refs.modalAuthor.textContent = '';\n    refs.modalTitle.textContent = '';\n    refs.modalDescription.textContent = '';\n    refs.modalImage.setAttribute('src', '');\n    refs.modal1.setAttribute('href', '');\n    refs.modal2.setAttribute('href', '');\n    refs.modal3.setAttribute('href', '');\n  }\n\n\ncloseBtn.addEventListener('click', closeModal);\nrefs.modalButton.addEventListener('click', buttonChange);\n\nfunction buttonChange() {\n  const bookData = {\n    author: refs.modalAuthor.textContent,\n    title: refs.modalTitle.textContent,\n    description: refs.modalDescription.textContent,\n    book_image: refs.modalImage.getAttribute('src'),\n    buy_links: [\n      { url: refs.modal1.getAttribute('href') },\n      { url: refs.modal2.getAttribute('href') },\n      { url: refs.modal3.getAttribute('href') }\n    ]\n  };\n\n  const shoppingList = JSON.parse(localStorage.getItem(storageKey)) || [];\n  const bookIndex = shoppingList.findIndex(item => item.title === bookData.title);\n\n  if (bookIndex === -1) {\n    shoppingList.push(bookData);\n    localStorage.setItem(storageKey, JSON.stringify(shoppingList));\n    refs.modalButton.textContent = 'Remove from the shopping list';\n    refs.afterButton.textContent =\n      'Congratulations! You have added the book to the shopping list. To delete, press the button \"Remove from the shopping list\".';\n  } else {\n    shoppingList.splice(bookIndex, 1);\n    localStorage.setItem(storageKey, JSON.stringify(shoppingList));\n    refs.modalButton.textContent = 'Add to shopping list';\n    refs.afterButton.textContent = '';\n  }\n}","import { getCategory } from './bookAPI';\nimport  {modalShow} from './modal'\nimport \"../css/renderSelectCategory.css\";\nconst contRef = document.querySelector(`.category-list-cont`);\n\n\nexport function onClickCategory(category) {\n    getCategory(category).then(response => {\n\n        renderCategory(getMarkCategory(response));\n\n    }).catch(console.log);\n}\n\n\n\nfunction renderCategory(mark) {\n\n    contRef.innerHTML = mark;\n    modalShow()\n}\n\n\nfunction getMarkCategory(array) {\n\n    const categoryName = markLastWord(array[0].list_name);\n    const title = `<h2 class=\"title-category-list\">${categoryName}</h2>`;\n    const elements = array.map(book => {\n        return `<li class=\"category-item\" data-id=\"${book._id}\">\n        <div class=\"category-img-container\">\n        <img class=\"category-item-img\" src=\"${book.book_image} \"/>\n        <p class=\"category-item-img-text-card\">\n                    quick view \n                  </p>\n        </div>\n        <p class=\"category-item-title\">${book.title}</p>\n        <p class=\"category-item-author\">${book.author}</p>\n        </li>`\n    }).join(\"\");\n    const result = `<div class=\"container select-category-cont\">${title}<ul class=\"category-list\">${elements}</ul></div>`\n    return result;\n}\n\n\n\n\nexport function markLastWord(string) {\n    const categoryName = string.split(' ');\n    const quantityWord = categoryName.length;\n    let categoryNameAddSpan = \"\";\n    if (quantityWord > 1) {\n        for (let i = 0; i <= quantityWord - 2; i += 1) {\n            categoryNameAddSpan += \" \" + categoryName[i];\n        }\n        categoryNameAddSpan += \" \" + `<span class=last-word-catteg-item>${categoryName[quantityWord - 1]}<span>`;\n    } else {\n        categoryNameAddSpan = `<span class=last-word-catteg-item>${categoryName[0]}<span>`;\n    }\n    return categoryNameAddSpan;\n}","const loader = document.querySelector('.loader');\n\nexport function showLoader() {\n    loader.style.display = 'block';\n}\n\nexport function hideLoader() {\n    loader.style.display = 'none';\n}","\nimport { hideLoader } from './loader';\nimport { showLoader } from './loader';\nimport { getBestBooks } from './bookAPI';\nimport { markLastWord, onClickCategory } from './renderSelectCategory';\nimport { scrollToTop } from './scroll-up'\nimport { modalShow } from './modal'\nconst homeContainer = document.querySelector(`.category-list-cont`);\n\n\nfunction renderBooks(mark) {\n  homeContainer.innerHTML = mark;\n  modalShow()\n}\n\nfunction renderBookCard(book) {\n  const { list_name, books } = book;\n\n  const title = `<h3 class=\"best-title-category-list\">${list_name}</h3>`;\n  const elements = books\n    .map(book => {\n      return `\n        <li class=\"best-book-item\" data-id=\"${book._id}\">\n        <div class=\"category-img-container\">\n          <img class=\"best-book-item-img\" src=\"${book.book_image}\"/>\n          <p class=\"category-item-img-text-card\">\n                    quick view \n                  </p>\n                  </div>\n          <h3 class=\"best-book-item-title\">${book.title}</h3>\n          <p class=\"best-book-item-author\">${book.author}</p>\n        </li>\n      `;\n    })\n    .join('');\n\n  const seeMoreButton = `<button class=\"seemore-btn\" type=\"button\" data-id=\"${list_name}\">See more</button>`;\n  const result = `<li class=\"best-category-item\">${title}<ul class=\"best-book-list\">${elements}</ul>${seeMoreButton}</li>`;\n  return result;\n}\n\nrenderCategory();\n\nexport function renderCategory() {\n  showLoader()\n  getBestBooks()\n    .then(response => {\n      const markup = `<div class=\" best-category-cont\"><h2 class=\"best-title-section title-category-list\">\n      ${markLastWord(\"Best Sellers Books\")}</h2><ul class=\"best-category-list\">${response.map(renderBookCard).join('')}</ul></div>`;\n      renderBooks(markup);\n      hideLoader()\n    })\n    .catch(error => {\n      console.log('Помилка при отриманні даних з сервера:', error);\n    });\n}\n\n\nhomeContainer.addEventListener('click', event => {\n  if (event.target.nodeName === \"BUTTON\") {\n    onClickCategory(event.target.dataset.id);\n    scrollToTop();\n  }\n})","import { getCategotyList } from './bookAPI'\nimport { onClickCategory } from './renderSelectCategory'\nimport { renderCategory } from './bestBooks'\n\nconst list = document.querySelector('.book-list-ul');\n\n\n\nfunction renderBookList() {\n    getCategotyList().then(response => {\n        list.insertAdjacentHTML('beforeend', createMarkup(response));\n    }\n    );\n}\n\nfunction createMarkup(list) {\n    const result = list.map(element => {\n        return ` <li class=\"book-list-item\">\n                     <a href=\"\" class=\"book-list-link\"><span>${element.list_name}</span></a>\n                </li>`\n    }).join('');\n    return result;\n}\n\n\n\nrenderBookList();\n\n\nlist.addEventListener('click', addClass);\n\nfunction addClass(evt) {\n    evt.preventDefault();\n    if (evt.target.nodeName !== \"SPAN\") {\n        return;\n    }\n    const removeEl = document.querySelector('.current');\n    removeEl.classList.remove('current');\n    const currentEl = evt.target;\n    currentEl.classList.add('current');\n\n    if (evt.target.textContent === \"All categories\") {\n        renderCategory();\n    } else {\n        onClickCategory(evt.target.textContent);\n    }\n\n}\n\n\n\n\n"],"names":["async","$c9d770031bfddb1d$export$3143df039a618b26","fetch","then","resolve","json","$c9d770031bfddb1d$export$410364bbb673ddbc","categoryName","$c9d770031bfddb1d$export$7f429e0f3975c907","id","document","querySelector","$8a7e756c566dd1ea$var$closeBtn","$8a7e756c566dd1ea$var$modalWindow","$8a7e756c566dd1ea$var$refs","modalImage","modalTitle","modalAuthor","modalDescription","modal1","modal2","modal3","modalButton","afterButton","$8a7e756c566dd1ea$export$a010d17e901479a8","querySelectorAll","forEach","element","addEventListener","elem","textContent","setAttribute","currentTarget","dataset","resp","author","title","description","book_image","buy_links","url","JSON","parse","localStorage","getItem","findIndex","item","classList","remove","body","add","$8a7e756c566dd1ea$var$backDropClick","$8a7e756c566dd1ea$var$onEscape","$8a7e756c566dd1ea$var$closeModal","removeEventListener","e","target","event","code","bookData","getAttribute","shoppingList","bookIndex","push","setItem","stringify","splice","$f82d5f6086e22b0c$var$contRef","$f82d5f6086e22b0c$export$68a4a2caef8d9054","category","response","mark","array","$f82d5f6086e22b0c$export$7a7789929b11dbd1","list_name","elements","map","book","_id","join","$f82d5f6086e22b0c$var$getMarkCategory","innerHTML","catch","console","log","string","split","quantityWord","length","categoryNameAddSpan","i","$bdfcdc80b4c38739$var$loader","$34993c7160fee615$var$homeContainer","$34993c7160fee615$var$renderBookCard","book1","books","$34993c7160fee615$export$e97b6e5d629f1acb","style","display","markup","error","nodeName","$74Aiq","scrollToTop","$2ce20b9974755a47$var$list","insertAdjacentHTML","evt","preventDefault"],"version":3,"file":"index.4bd19f18.js.map"}